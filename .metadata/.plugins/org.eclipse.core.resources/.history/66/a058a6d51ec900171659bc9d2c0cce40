package LRU;

import java.util.LinkedList;

public class FrameList extends LinkedList{
	private LinkedList<Frame> buffer;
	private static final int TAILLE=4;
	private int nbr_Access_Disk;
	
	public FrameList(LinkedList<Frame> buffer) {
		this.buffer = buffer;
		this.nbr_Access_Disk=0;
	}

	public int getNbr_Access_Disk() {
		return nbr_Access_Disk;
	}

	public void setNbr_Access_Disk(int nbr_Access_Disk) {
		this.nbr_Access_Disk = nbr_Access_Disk;
	}

	public LinkedList<Frame> getBuffer() {
		return buffer;
	}
	
	public void setBuffer(LinkedList<Frame> buffer) {
		this.buffer = buffer;
	}

	@Override
	public String toString() {
		String buf="";
		for(int i=0; i<TAILLE ; i++) {
			buf+=("(P"+(i+1)+": "+ buffer.get(i)+") ");
		}
		return "buffer=[" + buf + "], nbr_Access_Disk=" + nbr_Access_Disk + "]";
	}
	
	public Frame isInBuffer (String page) { //return the position in buffer
		for (int i=0 ; i<TAILLE && i<buffer.size(); i++) {
			if (buffer.get(i).getPagename().equals(page))
				return buffer.get(i);
		}
		return null;
	}
	
	public boolean add(String page) { // return true if the page is add successfully
		Frame f=new Frame(page);
		
		Frame j=isInBuffer(page);
		if (j!= null)
			reorganize(j);
			return false;
		if ()
	}
	public void reorganize(Frame f) {
		buffer.removeFirstOccurrence(f);
		buffer.addFirst(f);
	}
	
	
	
	
	
}
